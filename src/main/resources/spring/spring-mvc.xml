<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
    <!-- 配置SpringMVC -->

    <!-- 开启SpringMVC注解模式,会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean，
		这是SpringMVC为@Controllers分发请求所必需的，并提供了数据绑定支持、
		@NumberFormatannotation支持、 @DateTimeFormat支持、@Valid支持、读写XML的支持和读写JSON的支持等功能。 -->
    <mvc:annotation-driven validator="validator"/>


    <!--校验工厂-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <!--这里配置将messageSource -->
        <property name="validationMessageSource" ref="messageSource" />
    </bean>


    <!--validation message 校验消息-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="basenames">
            <list>
                <value>ValidationMessages</value>
            </list>
        </property>
    </bean>


    <!-- 静态资源默认servlet配置
        (1)加入对静态资源的处理：js,gif,png
        (2)允许使用"/"做整体映射
     -->
    <mvc:default-servlet-handler/>

    <!-- 扫描web相关的bean, 启用注解扫描，并定义组件查找规则 ，mvc层只负责扫描@Controller、@RestController, @ControllerAdvice -->
    <!-- base-package 如果多个，用“,”分隔 -->
    <context:component-scan base-package="com.leigq.www.*"
                            use-default-filters="false">
        <!-- 扫描@Controller -->
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />

        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.RestController" />

        <!-- 控制器增强，使一个Contoller成为全局的异常处理类，类中用@ExceptionHandler方法注解的方法可以处理所有Controller发生的异常 -->
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>


    <!-- 拦截器定义,根据自已需求添加，这里暂时没有拦截器，先注释掉 -->
    <!--<mvc:interceptors>
        <bean class="cn.dodou.server.web.interceptor.RequestInterceptor" />
    </mvc:interceptors>-->

    <!-- 视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!-- 后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 上传下载文件, 根据自已需求添加 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="209715200" />
        <property name="defaultEncoding" value="UTF-8" />
        <!-- resolveLazily属性启用是为了推迟文件解析 -->
        <property name="resolveLazily" value="true" />
    </bean>

</beans>